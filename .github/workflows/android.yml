clobber
        name: Android CI

on:
  workflow_dispatch: # Trigger manually from the GitHub Actions UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Build with Gradle
    - name: Build with Gradle
      run: ./gradlew build

    # Upload APK artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: engine.apk
        path: app/build/outputs/apk/debug/app-debug.apk

    # Extract classes.dex files and zip them
    - name: Extract and Zip Classes
      if: always() # Ensure this runs even if the APK upload succeeds
      run: |
        APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        ZIP_OUTPUT="classes.zip"
        
        # Create a temporary directory
        TEMP_DIR=$(mktemp -d)
        
        # Unzip the APK into the temporary directory
        unzip -o "$APK_PATH" -d "$TEMP_DIR"
        
        # Find all classes.dex files and zip them
        cd "$TEMP_DIR"
        zip "../$ZIP_OUTPUT" AndroidManifest.xml
        zip -r "../$ZIP_OUTPUT" classes*.dex

        # Return to the workspace
        cd -
        
        # Move the ZIP file to the workspace
        mv "$TEMP_DIR/$ZIP_OUTPUT" .

    # Show files list
    - name: Show files list
      run: ls
      
    # Upload Classes ZIP artifact
    - name: Upload Classes ZIP
      uses: actions/upload-artifact@v4
      with:
        name: classes.zip
        path: classes.zip
        
    # Install GitHub CLI
    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    # Clear GITHUB_TOKEN
    - name: Clear GITHUB_TOKEN
      run: unset GITHUB_TOKEN

    # Authenticate GitHub CLI with PAT
    - name: Authenticate GitHub CLI
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

    # Upload build artifacts to existing Release
    - name: Upload build artifacts to existing Release
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        release_tag="Star2DEvolution"
        echo "Fetching release ID for tag: $release_tag"
        release_id=$(gh release view $release_tag --json id -q ".id")
        if [ -z "$release_id" ]; then
          echo "Error: Release with tag $release_tag not found"
          exit 1
        fi
        echo "Found release ID: $release_id"
        gh release upload $release_id app/build/outputs/apk/debug/app-debug.apk --clobber
        
