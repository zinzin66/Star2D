name: Aab Build

on:
  workflow_dispatch:
    inputs:
      upload_to_playstore:
        description: 'Upload to Google Play?'
        type: boolean
        required: true
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      
      # 🔄 Checkout repository
      - uses: actions/checkout@v3  

      # ☕ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      # 📄 Read release notes at the very start
      - name: Read release notes
        id: notes
        run: |
          if [ ! -f release_notes.txt ]; then
            echo "Error: release_notes.txt not found. Exiting workflow."
            exit 1
          fi

          # Use a plain, unique delimiter without quotes
          echo "RELEASE_NOTES<<RELEASE_NOTES_DELIMITER" >> $GITHUB_ENV
          cat release_notes.txt >> $GITHUB_ENV
          echo "RELEASE_NOTES_DELIMITER" >> $GITHUB_ENV

          echo "Release notes loaded successfully."

      # 🔐 Create keystore from secrets
      - name: Create keystore from secret
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/Star4droid.jks
          
          if [ -f app/Star4droid.jks ]; then
            echo "Keystore file created successfully."
            echo "KEYSTORE_FILE=$GITHUB_WORKSPACE/app/Star4droid.jks" >> $GITHUB_ENV
            echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
            echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
            echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          else
            echo "Error: Keystore file was not created."
            exit 1
          fi

      # 🛠 Setup Android NDK
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1.5.0
        with:
          ndk-version: r28c

      # 🔧 Ensure gradlew is executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # ⚡ Build APK
      - name: Build APK with Gradle
        run: ./gradlew clean assembleRelease

      # ⚡ Build AAB
      - name: Build AAB with Gradle
        run: ./gradlew bundleRelease

      # 📦 Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: engine.apk
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 90

      # 📦 Upload AAB as artifact
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: engine.aab
          path: app/build/outputs/bundle/release/app-release.aab
          retention-days: 90

      # 🚀 Upload AAB to Play Store if requested
      - name: Upload to Play Store
        if: ${{ github.event.inputs.upload_to_playstore == 'true' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON_KEY }}
          packageName: com.star4droid.star2d.evo
          releaseFiles: app/build/outputs/bundle/release/*.aab
          track: production
          status: completed
          whatsNew: ${{ env.RELEASE_NOTES }}