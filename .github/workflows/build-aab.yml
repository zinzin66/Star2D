name: Aab Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Setup Android NDK
    - name: Setup Android NDK
      uses: android-actions/setup-ndk@v2
      with:
        ndk-version: '28.0.5195000'

    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # ✅ قم بالبناء باستخدام أمر bundleRelease لإنشاء AAB
    - name: Build with Gradle
      run: ./gradlew bundleRelease

    # ✅ تحميل ملف AAB الناتج
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: engine.aab
        path: app/build/outputs/bundle/release/app-release.aab
        retention-days: 999

        # خطوة فحص للتأكد من المحاذاة
    - name: Verify 16KB Page Alignment
      run: |
        AAB_PATH="app/build/outputs/bundle/release/app-release.aab"
        
        # قم بإنشاء مجلد مؤقت واستخرج منه ملفات .so
        TEMP_DIR=$(mktemp -d)
        unzip -q -j "$AAB_PATH" "*.so" -d "$TEMP_DIR"
        
        # تحقق من المحاذاة لكل ملف .so
        for so_file in "$TEMP_DIR"/*.so; do
          echo "Checking alignment for $so_file"
          # استخدم readelf للتحقق من قيمة p_align
          readelf -l "$so_file" | grep "p_align"
          
          # أضف منطق للتحقق من أن القيمة هي 16384 أو 4096
          # (يمكنك استخدام أدوات إضافية مثل awk للتأكد من القيمة)
        done
        
        # تنظيف المجلد المؤقت
        rm -rf "$TEMP_DIR"

    # Show files list
    - name: Show files list
      run: ls
