
plugins {
    id 'com.android.application'  
}

android {
    namespace 'com.star4droid.star2d.evo'
    compileSdk 36
    buildToolsVersion '36.0.0'
    lint {
    disable 'MissingTranslation', 'TypographyFractions'
    checkOnly 'NewApi', 'HandlerLeak'
    abortOnError false
    checkReleaseBuilds false
    }
    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE_FILE") ?: "Star4droid.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
    defaultConfig {
        applicationId "com.star4droid.star2d.evo"
        minSdk 23
        targetSdk 36
        versionCode 31
        versionName "0.2.7Beta"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
            }
        }
        vectorDrawables { 
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
    }
    
}

ext {
    gdxVersion = '1.13.1'
}

configurations { natives }

dependencies {

    implementation("com.google.android.material:material:1.11.0")
    implementation project(':Formatter')
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation fileTree(dir: 'libs', include: ['*.jar']);
    implementation fileTree(dir: 'libs', include: ['*.aar']);
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.guava:guava:32.0.1-android'
  //  implementation 'com.google.guava:guava:guava-33.4.0-jre'
    implementation 'com.android.tools:r8:8.1.56'
    implementation platform("io.github.Rosemoe.sora-editor:bom:0.23.6")
    implementation "io.github.Rosemoe.sora-editor:editor"
    implementation "io.github.Rosemoe.sora-editor:language-textmate"
    implementation 'com.badlogicgames.gdx:gdx:1.13.1'
    implementation "com.badlogicgames.gdx:gdx-freetype:1.13.5"
    
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.13.5:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.13.5:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.13.5:natives-x86"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.13.5:natives-x86_64"

    
    testImplementation 'com.badlogicgames.gdx:gdx-platform:1.13.1'
    // https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-backend-lwjgl
    testImplementation 'com.badlogicgames.gdx:gdx-backend-lwjgl:1.13.1'
    // https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-backend-android
    implementation 'com.badlogicgames.gdx:gdx-backend-android:1.13.1'
    // https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-box2d
    implementation 'com.badlogicgames.gdx:gdx-box2d:1.13.1'
    // https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-box2d-platform
    testImplementation 'com.badlogicgames.gdx:gdx-box2d-platform:1.13.1'
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
// https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-box2d
    implementation 'com.badlogicgames.gdx:gdx-box2d:1.13.1'

}

// Called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
tasks.register('copyAndroidNatives') {
    doFirst {
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
        file("libs/x86_64/").mkdirs()
        file("libs/x86/").mkdirs()

        configurations.natives.copy().files.each { jar ->
            def outputDir = null
            if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
            if(jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
            if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
            if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
            if(outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

tasks.matching { it.name.contains("merge") && it.name.contains("JniLibFolders") }.configureEach { packageTask ->
    packageTask.dependsOn 'copyAndroidNatives'
}