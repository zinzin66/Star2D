// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FloatingInputBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView clear;

  @NonNull
  public final ImageView del;

  @NonNull
  public final ImageView done;

  @NonNull
  public final ImageView hide;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear6;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview10;

  @NonNull
  public final TextView textview11;

  @NonNull
  public final TextView textview12;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView textview4;

  @NonNull
  public final TextView textview5;

  @NonNull
  public final TextView textview6;

  @NonNull
  public final TextView textview7;

  @NonNull
  public final TextView textview8;

  @NonNull
  public final TextView textview9;

  private FloatingInputBinding(@NonNull LinearLayout rootView, @NonNull ImageView clear,
      @NonNull ImageView del, @NonNull ImageView done, @NonNull ImageView hide,
      @NonNull LinearLayout linear, @NonNull LinearLayout linear3, @NonNull LinearLayout linear4,
      @NonNull LinearLayout linear5, @NonNull LinearLayout linear6, @NonNull LinearLayout linear7,
      @NonNull TextView text, @NonNull TextView textview1, @NonNull TextView textview10,
      @NonNull TextView textview11, @NonNull TextView textview12, @NonNull TextView textview2,
      @NonNull TextView textview3, @NonNull TextView textview4, @NonNull TextView textview5,
      @NonNull TextView textview6, @NonNull TextView textview7, @NonNull TextView textview8,
      @NonNull TextView textview9) {
    this.rootView = rootView;
    this.clear = clear;
    this.del = del;
    this.done = done;
    this.hide = hide;
    this.linear = linear;
    this.linear3 = linear3;
    this.linear4 = linear4;
    this.linear5 = linear5;
    this.linear6 = linear6;
    this.linear7 = linear7;
    this.text = text;
    this.textview1 = textview1;
    this.textview10 = textview10;
    this.textview11 = textview11;
    this.textview12 = textview12;
    this.textview2 = textview2;
    this.textview3 = textview3;
    this.textview4 = textview4;
    this.textview5 = textview5;
    this.textview6 = textview6;
    this.textview7 = textview7;
    this.textview8 = textview8;
    this.textview9 = textview9;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FloatingInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FloatingInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.floating_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FloatingInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear;
      ImageView clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.del;
      ImageView del = ViewBindings.findChildViewById(rootView, id);
      if (del == null) {
        break missingId;
      }

      id = R.id.done;
      ImageView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.hide;
      ImageView hide = ViewBindings.findChildViewById(rootView, id);
      if (hide == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear6;
      LinearLayout linear6 = ViewBindings.findChildViewById(rootView, id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = ViewBindings.findChildViewById(rootView, id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview10;
      TextView textview10 = ViewBindings.findChildViewById(rootView, id);
      if (textview10 == null) {
        break missingId;
      }

      id = R.id.textview11;
      TextView textview11 = ViewBindings.findChildViewById(rootView, id);
      if (textview11 == null) {
        break missingId;
      }

      id = R.id.textview12;
      TextView textview12 = ViewBindings.findChildViewById(rootView, id);
      if (textview12 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.textview4;
      TextView textview4 = ViewBindings.findChildViewById(rootView, id);
      if (textview4 == null) {
        break missingId;
      }

      id = R.id.textview5;
      TextView textview5 = ViewBindings.findChildViewById(rootView, id);
      if (textview5 == null) {
        break missingId;
      }

      id = R.id.textview6;
      TextView textview6 = ViewBindings.findChildViewById(rootView, id);
      if (textview6 == null) {
        break missingId;
      }

      id = R.id.textview7;
      TextView textview7 = ViewBindings.findChildViewById(rootView, id);
      if (textview7 == null) {
        break missingId;
      }

      id = R.id.textview8;
      TextView textview8 = ViewBindings.findChildViewById(rootView, id);
      if (textview8 == null) {
        break missingId;
      }

      id = R.id.textview9;
      TextView textview9 = ViewBindings.findChildViewById(rootView, id);
      if (textview9 == null) {
        break missingId;
      }

      return new FloatingInputBinding((LinearLayout) rootView, clear, del, done, hide, linear,
          linear3, linear4, linear5, linear6, linear7, text, textview1, textview10, textview11,
          textview12, textview2, textview3, textview4, textview5, textview6, textview7, textview8,
          textview9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
