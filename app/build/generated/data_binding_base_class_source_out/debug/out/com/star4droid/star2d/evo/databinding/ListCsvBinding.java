// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListCsvBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout backupLin;

  @NonNull
  public final LinearLayout delLin;

  @NonNull
  public final LinearLayout export;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final ImageView imageview4;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final TextView name;

  private ListCsvBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout backupLin,
      @NonNull LinearLayout delLin, @NonNull LinearLayout export, @NonNull ImageView imageview1,
      @NonNull ImageView imageview2, @NonNull ImageView imageview3, @NonNull ImageView imageview4,
      @NonNull LinearLayout linear1, @NonNull TextView name) {
    this.rootView = rootView;
    this.backupLin = backupLin;
    this.delLin = delLin;
    this.export = export;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.imageview3 = imageview3;
    this.imageview4 = imageview4;
    this.linear1 = linear1;
    this.name = name;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListCsvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListCsvBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_csv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListCsvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backupLin;
      LinearLayout backupLin = ViewBindings.findChildViewById(rootView, id);
      if (backupLin == null) {
        break missingId;
      }

      id = R.id.delLin;
      LinearLayout delLin = ViewBindings.findChildViewById(rootView, id);
      if (delLin == null) {
        break missingId;
      }

      id = R.id.export;
      LinearLayout export = ViewBindings.findChildViewById(rootView, id);
      if (export == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = ViewBindings.findChildViewById(rootView, id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.imageview4;
      ImageView imageview4 = ViewBindings.findChildViewById(rootView, id);
      if (imageview4 == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      return new ListCsvBinding((LinearLayout) rootView, backupLin, delLin, export, imageview1,
          imageview2, imageview3, imageview4, linear1, name);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
