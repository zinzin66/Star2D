// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.navigation.NavigationView;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProjectsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addProject;

  @NonNull
  public final ListView listview1;

  @NonNull
  public final NavigationView navigation;

  @NonNull
  public final LinearLayout projectsLinear;

  @NonNull
  public final Button restore;

  @NonNull
  public final Button settings;

  private ProjectsBinding(@NonNull ConstraintLayout rootView, @NonNull Button addProject,
      @NonNull ListView listview1, @NonNull NavigationView navigation,
      @NonNull LinearLayout projectsLinear, @NonNull Button restore, @NonNull Button settings) {
    this.rootView = rootView;
    this.addProject = addProject;
    this.listview1 = listview1;
    this.navigation = navigation;
    this.projectsLinear = projectsLinear;
    this.restore = restore;
    this.settings = settings;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProjectsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProjectsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.projects, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProjectsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addProject;
      Button addProject = ViewBindings.findChildViewById(rootView, id);
      if (addProject == null) {
        break missingId;
      }

      id = R.id.listview1;
      ListView listview1 = ViewBindings.findChildViewById(rootView, id);
      if (listview1 == null) {
        break missingId;
      }

      id = R.id.navigation;
      NavigationView navigation = ViewBindings.findChildViewById(rootView, id);
      if (navigation == null) {
        break missingId;
      }

      id = R.id.projectsLinear;
      LinearLayout projectsLinear = ViewBindings.findChildViewById(rootView, id);
      if (projectsLinear == null) {
        break missingId;
      }

      id = R.id.restore;
      Button restore = ViewBindings.findChildViewById(rootView, id);
      if (restore == null) {
        break missingId;
      }

      id = R.id.settings;
      Button settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      return new ProjectsBinding((ConstraintLayout) rootView, addProject, listview1, navigation,
          projectsLinear, restore, settings);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
