// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChoicesPopupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout copy;

  @NonNull
  public final ImageView copyImg;

  @NonNull
  public final TextView copyText;

  @NonNull
  public final LinearLayout delete;

  @NonNull
  public final ImageView deleteImg;

  @NonNull
  public final TextView deleteText;

  @NonNull
  public final LinearLayout linear2;

  private ChoicesPopupBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout copy,
      @NonNull ImageView copyImg, @NonNull TextView copyText, @NonNull LinearLayout delete,
      @NonNull ImageView deleteImg, @NonNull TextView deleteText, @NonNull LinearLayout linear2) {
    this.rootView = rootView;
    this.copy = copy;
    this.copyImg = copyImg;
    this.copyText = copyText;
    this.delete = delete;
    this.deleteImg = deleteImg;
    this.deleteText = deleteText;
    this.linear2 = linear2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChoicesPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChoicesPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.choices_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChoicesPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copy;
      LinearLayout copy = ViewBindings.findChildViewById(rootView, id);
      if (copy == null) {
        break missingId;
      }

      id = R.id.copy_img;
      ImageView copyImg = ViewBindings.findChildViewById(rootView, id);
      if (copyImg == null) {
        break missingId;
      }

      id = R.id.copy_text;
      TextView copyText = ViewBindings.findChildViewById(rootView, id);
      if (copyText == null) {
        break missingId;
      }

      id = R.id.delete;
      LinearLayout delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.delete_img;
      ImageView deleteImg = ViewBindings.findChildViewById(rootView, id);
      if (deleteImg == null) {
        break missingId;
      }

      id = R.id.delete_text;
      TextView deleteText = ViewBindings.findChildViewById(rootView, id);
      if (deleteText == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      return new ChoicesPopupBinding((LinearLayout) rootView, copy, copyImg, copyText, delete,
          deleteImg, deleteText, linear2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
