// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.star4droid.star2d.evo.R;
import io.github.rosemoe.sora.widget.CodeEditor;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CodeEditorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final CodeEditor editor;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final ImageView info;

  @NonNull
  public final ImageView keyboard;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear6;

  @NonNull
  public final ImageView rotate;

  @NonNull
  public final LinearLayout save;

  @NonNull
  public final TextView saveInfo;

  @NonNull
  public final LinearLayout symbols;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview2;

  private CodeEditorBinding(@NonNull LinearLayout rootView, @NonNull ImageView back,
      @NonNull CodeEditor editor, @NonNull ImageView imageview1, @NonNull ImageView imageview2,
      @NonNull ImageView info, @NonNull ImageView keyboard, @NonNull LinearLayout linear1,
      @NonNull LinearLayout linear2, @NonNull LinearLayout linear3, @NonNull LinearLayout linear5,
      @NonNull LinearLayout linear6, @NonNull ImageView rotate, @NonNull LinearLayout save,
      @NonNull TextView saveInfo, @NonNull LinearLayout symbols, @NonNull TextView textview1,
      @NonNull TextView textview2) {
    this.rootView = rootView;
    this.back = back;
    this.editor = editor;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.info = info;
    this.keyboard = keyboard;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.linear3 = linear3;
    this.linear5 = linear5;
    this.linear6 = linear6;
    this.rotate = rotate;
    this.save = save;
    this.saveInfo = saveInfo;
    this.symbols = symbols;
    this.textview1 = textview1;
    this.textview2 = textview2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CodeEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CodeEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.code_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CodeEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.editor;
      CodeEditor editor = ViewBindings.findChildViewById(rootView, id);
      if (editor == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.info;
      ImageView info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.keyboard;
      ImageView keyboard = ViewBindings.findChildViewById(rootView, id);
      if (keyboard == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear6;
      LinearLayout linear6 = ViewBindings.findChildViewById(rootView, id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.rotate;
      ImageView rotate = ViewBindings.findChildViewById(rootView, id);
      if (rotate == null) {
        break missingId;
      }

      id = R.id.save;
      LinearLayout save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.save_info;
      TextView saveInfo = ViewBindings.findChildViewById(rootView, id);
      if (saveInfo == null) {
        break missingId;
      }

      id = R.id.symbols;
      LinearLayout symbols = ViewBindings.findChildViewById(rootView, id);
      if (symbols == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      return new CodeEditorBinding((LinearLayout) rootView, back, editor, imageview1, imageview2,
          info, keyboard, linear1, linear2, linear3, linear5, linear6, rotate, save, saveInfo,
          symbols, textview1, textview2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
