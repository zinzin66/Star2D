// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.star4droid.star2d.Helpers.ColorWheelView;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ColorValueEditorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout alphaLinear;

  @NonNull
  public final MaterialButton cancel;

  @NonNull
  public final ImageView home;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final LinearLayout result;

  @NonNull
  public final EditText resultText;

  @NonNull
  public final SeekBar seek;

  @NonNull
  public final MaterialButton select;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final ColorWheelView wheel;

  private ColorValueEditorBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout alphaLinear,
      @NonNull MaterialButton cancel, @NonNull ImageView home, @NonNull LinearLayout linear,
      @NonNull LinearLayout linear3, @NonNull LinearLayout result, @NonNull EditText resultText,
      @NonNull SeekBar seek, @NonNull MaterialButton select, @NonNull TextView textview1,
      @NonNull ColorWheelView wheel) {
    this.rootView = rootView;
    this.alphaLinear = alphaLinear;
    this.cancel = cancel;
    this.home = home;
    this.linear = linear;
    this.linear3 = linear3;
    this.result = result;
    this.resultText = resultText;
    this.seek = seek;
    this.select = select;
    this.textview1 = textview1;
    this.wheel = wheel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ColorValueEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ColorValueEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.color_value_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ColorValueEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alphaLinear;
      LinearLayout alphaLinear = ViewBindings.findChildViewById(rootView, id);
      if (alphaLinear == null) {
        break missingId;
      }

      id = R.id.cancel;
      MaterialButton cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.home;
      ImageView home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.result;
      LinearLayout result = ViewBindings.findChildViewById(rootView, id);
      if (result == null) {
        break missingId;
      }

      id = R.id.resultText;
      EditText resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.seek;
      SeekBar seek = ViewBindings.findChildViewById(rootView, id);
      if (seek == null) {
        break missingId;
      }

      id = R.id.select;
      MaterialButton select = ViewBindings.findChildViewById(rootView, id);
      if (select == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.wheel;
      ColorWheelView wheel = ViewBindings.findChildViewById(rootView, id);
      if (wheel == null) {
        break missingId;
      }

      return new ColorValueEditorBinding((LinearLayout) rootView, alphaLinear, cancel, home, linear,
          linear3, result, resultText, seek, select, textview1, wheel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
