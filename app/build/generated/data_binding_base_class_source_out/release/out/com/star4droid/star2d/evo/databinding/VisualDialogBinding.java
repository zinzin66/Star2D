// Generated by view binder compiler. Do not edit!
package com.star4droid.star2d.evo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.star4droid.star2d.evo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VisualDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView close;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final ImageView saveCode;

  @NonNull
  public final TextView scriptPath;

  @NonNull
  public final ImageView showCode;

  private VisualDialogBinding(@NonNull LinearLayout rootView, @NonNull ImageView close,
      @NonNull LinearLayout linear, @NonNull LinearLayout linear2, @NonNull ImageView saveCode,
      @NonNull TextView scriptPath, @NonNull ImageView showCode) {
    this.rootView = rootView;
    this.close = close;
    this.linear = linear;
    this.linear2 = linear2;
    this.saveCode = saveCode;
    this.scriptPath = scriptPath;
    this.showCode = showCode;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VisualDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VisualDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.visual_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VisualDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      LinearLayout linear = (LinearLayout) rootView;

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.save_code;
      ImageView saveCode = ViewBindings.findChildViewById(rootView, id);
      if (saveCode == null) {
        break missingId;
      }

      id = R.id.script_path;
      TextView scriptPath = ViewBindings.findChildViewById(rootView, id);
      if (scriptPath == null) {
        break missingId;
      }

      id = R.id.show_code;
      ImageView showCode = ViewBindings.findChildViewById(rootView, id);
      if (showCode == null) {
        break missingId;
      }

      return new VisualDialogBinding((LinearLayout) rootView, close, linear, linear2, saveCode,
          scriptPath, showCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
